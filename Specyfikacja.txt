Język funkcyjny, składnia podobna do Haskella
Zależnie od tego jak mi będzie szło, rozważam wersję podstawową i rozszerzoną.
Podstawowa - za 20 punktów, listy z pattern matchingiem i lukrem syntaktycznym
Rozszerzona - jw., z tym że kilka dodatkowych cech, z ilością dodatkowych punktów,
które się spodziewam otrzymać:

- importowanie modułów
    słowo kluczowe `import <nazwa pliku>`, wczytujący definicje (2p.)

- ogólne rekurencyjne typy algebraiczne (jak data w Haskellu) z pattern matchingiem
    2p.

- statyczne typowanie z wymaganiem podania typów
    typ podany przed definicją (2p.)

- statyczne wiązanie identyfikatorów przy dowolnym poziomie zagnieżdżenia definicji
    2p.

lub, jeszcze mocniejsze (wówczas podanie typu nieobowiązkowe)

- polimorficzne, rekurencyjne type algebraiczne
    4p. (wówczas nie liczymy 2 za ogólne rekurencyjne typy)

- bonusowa implementacja rekonstrukcji typów
    5p.

